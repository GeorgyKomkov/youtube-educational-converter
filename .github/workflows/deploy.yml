name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - name: Verify secrets
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          YOUTUBE_API_KEY: ${{ secrets.YOUTUBE_API_KEY }}
          YOUTUBE_CLIENT_SECRETS: ${{ secrets.YOUTUBE_CLIENT_SECRETS }}
        run: |
          for var in SSH_HOST SSH_USER SSH_PRIVATE_KEY YOUTUBE_API_KEY YOUTUBE_CLIENT_SECRETS; do
            if [ -z "${!var}" ]; then
              echo "Error: $var is not set"
              exit 1
            fi
          done

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /opt/youtube-converter
            cat > .env << 'EOL'
            # Flask
            FLASK_SECRET_KEY=4ea903f687c2efccd3fe7233d9223b85f4eca5bdce90460877eddbfa4ef9a037
            FLASK_ENV=production

            # YouTube API
            YOUTUBE_API_KEY=${{ secrets.YOUTUBE_API_KEY }}
            YOUTUBE_CLIENT_SECRETS='${{ secrets.YOUTUBE_CLIENT_SECRETS }}'

            # Redis
            REDIS_URL=redis://redis:6379/0
            CELERY_BROKER_URL=redis://redis:6379/0

            # App Settings
            MAX_WORKERS=2
            WHISPER_MODEL=tiny
            MAX_VIDEO_SIZE=500
            EMERGENCY_CLEANUP_THRESHOLD=85

            # Monitoring
            PROMETHEUS_PORT=9090
            GRAFANA_ADMIN_PASSWORD=admin
            EOL

            docker-compose down
            docker system prune -af --volumes
            docker-compose up -d --build
            
            sleep 30
            
            echo "=== Docker PS ==="
            docker ps -a
            
            echo "=== All Container Logs ==="
            for container in $(docker ps -aq); do
              echo "=== Logs for $(docker inspect $container -f '{{.Name}}') ==="
              docker logs $container 2>&1
            done

      - name: Health check
        run: |
          sleep 120
          for i in {1..5}; do
            echo "Attempt $i to connect to health check..."
            curl -v "http://${{ secrets.SSH_HOST }}:8080/health" || true
            if curl -f "http://${{ secrets.SSH_HOST }}:8080/health"; then
              echo "Health check passed"
              exit 0
            fi
            echo "Waiting 30 seconds before next attempt..."
            sleep 30
          done
          echo "Health check failed after all attempts"
          exit 1

      - name: Verify Prometheus
        run: |
          sleep 15
          curl -f "http://${{ secrets.SSH_HOST }}:9091/metrics" || exit 1

      - name: Verify Grafana
        run: |
          sleep 15
          curl -f "http://${{ secrets.SSH_HOST }}:3000" || exit 1