<<<<<<< HEAD
name: Deploy to Production

on:
  push:
    branches: [ main ]
=======
name: Deploy to Server

on:
  push:
    branches:
      - main
>>>>>>> 4c6b0cf7d983e9ad892facbd47d78175a254971b

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
<<<<<<< HEAD
      - uses: actions/checkout@v2
      
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Add host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts
      
      - name: Deploy to server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            cd /home/ubuntu/youtube-converter || exit 1
            if [ ! -d .git ]; then
              git clone https://github.com/GeorgyKomkov/youtube-educational-converter.git .
            fi
            git fetch
            git reset --hard origin/main
            docker-compose down
            docker system prune -af --volumes
            docker-compose up -d --build
          EOF 
=======
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Add host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to server
        run: |
          ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} << 'ENDSSH'
            # Переходим в директорию проекта (предполагаем, что это /root/youtube-educational-converter)
            cd /root/youtube-educational-converter
            
            # Получаем последние изменения из репозитория
            git pull origin main
            
            # Останавливаем текущие контейнеры
            docker-compose down
            
            # Пересобираем образы с --no-cache для обновления зависимостей
            docker-compose build --no-cache
            
            # Запускаем контейнеры в фоновом режиме
            docker-compose up -d
            
            # Очищаем неиспользуемые образы
            docker image prune -f
            
            # Проверяем статус контейнеров
            docker-compose ps
          ENDSSH
>>>>>>> 4c6b0cf7d983e9ad892facbd47d78175a254971b
