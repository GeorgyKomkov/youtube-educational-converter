name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Check secrets format
        run: |
          # Проверяем наличие всех секретов
          if [ -z "${{ secrets.SSH_HOST }}" ]; then
            echo "Error: SSH_HOST не установлен"
            exit 1
          fi
          
          if [ -z "${{ secrets.SSH_USER }}" ]; then
            echo "Error: SSH_USER не установлен"
            exit 1
          fi
          
          if [ -z "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
            echo "Error: SSH_PRIVATE_KEY не установлен"
            exit 1
          fi
          
          if [ -z "${{ secrets.YOUTUBE_CLIENT_SECRETS }}" ]; then
            echo "Error: YOUTUBE_CLIENT_SECRETS не установлен"
            exit 1
          fi
          
          if [ -z "${{ secrets.YOUTUBE_API_KEY }}" ]; then
            echo "Error: YOUTUBE_API_KEY не установлен"
            exit 1
          fi
          
          echo "✅ Все секреты установлены"

      - uses: actions/checkout@v2
      
      - name: Copy project files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "."
          target: "/root/youtube-converter"
      
      - name: Deploy application
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /root/youtube-converter
            
            # Создаем credentials
            echo "Creating credentials files..."
            echo '${{ secrets.YOUTUBE_CLIENT_SECRETS }}' > client_secrets.json
            echo '${{ secrets.YOUTUBE_API_KEY }}' > api.txt
            chmod 644 client_secrets.json api.txt
            
            # Проверяем сборку
            echo "Building containers..."
            docker-compose build --no-cache --progress=plain
            
            echo "Starting containers..."
            docker-compose down
            docker system prune -f
            docker-compose up -d
            
            # Проверяем запуск контейнеров
            echo "Checking containers..."
            sleep 30
            if ! docker-compose ps | grep "Up"; then
              echo "Error: Containers failed to start"
              docker-compose logs
              exit 1
            fi
            
            echo "Waiting for container to initialize..."
            sleep 45
            
            echo "Docker logs:"
            docker-compose logs
            
            echo "Container status:"
            docker ps -a
            
            echo "Memory usage:"
            free -h
            
            echo "Disk space:"
            df -h

      - name: Verify deployment
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          # Создаем временный ключ для SSH
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          
          # Увеличиваем время ожидания
          sleep 180
          
          for i in {1..5}; do
            echo "Attempt $i: Checking server status..."
            if curl -v --fail --max-time 60 http://${{ secrets.SSH_HOST }}:8080/health; then
              echo "Service is up and running!"
              exit 0
            fi
            
            # Проверяем логи при неудаче
            echo "Attempt $i failed. Checking logs..."
            ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no root@${{ secrets.SSH_HOST }} '
              cd /root/youtube-converter && 
              echo "Container status:" &&
              docker-compose ps &&
              echo "\nServer logs:" &&
              docker-compose logs server &&
              echo "\nWorker logs:" &&
              docker-compose logs worker
            '
            
            echo "Waiting before next attempt..."
            sleep 60
          done
          
          echo "Service failed to start properly"
          echo "Final container status and logs:"
          ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no root@${{ secrets.SSH_HOST }} '
            cd /root/youtube-converter &&
            docker-compose ps &&
            docker-compose logs
          '
          exit 1
