name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Debug secrets
        run: |
          if [ -n "${{ secrets.SSH_HOST }}" ]; then
            echo "SSH_HOST is set"
          else
            echo "SSH_HOST is not set"
          fi
          if [ -n "${{ secrets.SSH_USER }}" ]; then
            echo "SSH_USER is set"
          else
            echo "SSH_USER is not set"
          fi
          if [ -n "${{ secrets.SSH_PRIVATE_KEY }}" ]; then
            echo "SSH_PRIVATE_KEY is set"
          else
            echo "SSH_PRIVATE_KEY is not set"
          fi

      - name: Create credentials files
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/youtube-converter
            echo "Creating credentials files..."
            echo '${{ secrets.YOUTUBE_CLIENT_SECRETS }}' > client_secrets.json
            echo '${{ secrets.YOUTUBE_API_KEY }}' > api.txt
            
            echo "Checking files..."
            ls -la client_secrets.json api.txt
            
            echo "File contents (first line):"
            head -n 1 client_secrets.json
            head -n 1 api.txt

      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/ubuntu/youtube-converter
            
            echo "Stopping existing containers..."
            docker-compose down
            
            echo "Building and starting containers..."
            docker-compose build --no-cache
            docker-compose up -d
            
            echo "Waiting for container to start..."
            sleep 30
            
            echo "Container logs:"
            docker-compose logs
            
            echo "Container status:"
            docker ps -a
            
            echo "Checking mounted files in container:"
            docker exec youtube-converter-server-1 ls -la /app/client_secrets.json /app/api.txt

      - name: Verify deployment
        run: |
          # Увеличиваем начальное время ожидания
          sleep 45
          
          # Проверяем доступность сервера
          for i in {1..5}; do
            echo "Attempt $i: Checking server status..."
            if curl -v --fail http://${{ secrets.SSH_HOST }}:8080/health; then
              echo "Service is up and running!"
              exit 0
            fi
            echo "Attempt $i failed, waiting..."
            sleep 15
          done
          
          echo "Service failed to start properly"
          exit 1
