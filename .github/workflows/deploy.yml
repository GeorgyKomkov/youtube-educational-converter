name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    env:
      DOCKER_COMPOSE_VERSION: v2.24.5
      DEPLOY_PATH: /root/youtube-converter
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup environment variables
        run: |
          {
            echo "SSH_HOST=${{ secrets.SSH_HOST }}"
            echo "SSH_USER=${{ secrets.SSH_USER }}"
            echo "SSH_KEY=${{ secrets.SSH_PRIVATE_KEY }}"
            echo "SSH_KNOWN_HOSTS=${{ secrets.SSH_HOST_KEY }}"
            echo "YOUTUBE_ID=${{ secrets.YOUTUBE_CLIENT_ID }}"
            echo "YOUTUBE_SECRET=${{ secrets.YOUTUBE_CLIENT_SECRET }}"
            echo "YOUTUBE_KEY=${{ secrets.YOUTUBE_API_KEY }}"
          } >> $GITHUB_ENV
      
      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ env.SSH_KEY }}
      
      - name: Add known hosts
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
      
      - name: Install Docker Compose
        run: |
          if [ ! -f /usr/local/bin/docker-compose ]; then
            sudo curl -L "https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose
          fi
      
      - name: Create env file
        run: |
          cat > .env << EOF
          YOUTUBE_CLIENT_ID=$YOUTUBE_ID
          YOUTUBE_CLIENT_SECRET=$YOUTUBE_SECRET
          YOUTUBE_API_KEY=$YOUTUBE_KEY
          EOF
      
      - name: Deploy
        run: |
          # Создание директорий
          ssh $SSH_USER@$SSH_HOST "mkdir -p ${DEPLOY_PATH}/{videos,output,temp,cache/models,logs,static/{css,js}}"
          
          # Копирование файлов
          scp -r ./* $SSH_USER@$SSH_HOST:${DEPLOY_PATH}/
          scp .env $SSH_USER@$SSH_HOST:${DEPLOY_PATH}/
          
          # Установка прав и запуск
          ssh $SSH_USER@$SSH_HOST "cd ${DEPLOY_PATH} && \
            chmod -R 777 videos output temp cache logs && \
            chmod 600 .env && \
            docker-compose down && \
            docker-compose pull && \
            docker-compose build --no-cache && \
            docker-compose up -d && \
            systemctl daemon-reload && \
            systemctl restart youtube-converter"

      - name: Verify
        run: |
          sleep 30
          curl -f "http://$SSH_HOST:8080/health" || exit 1
        
      - name: Cleanup
        if: always()
        run: |
          ssh $SSH_USER@$SSH_HOST "docker system prune -af --volumes"