version: '3.8'

services:
  redis:
    image: redis:alpine
    volumes:
      - redis_data:/data
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 128M
    command: redis-server --appendonly yes

  server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 512M

  worker:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A src.server.celery worker --loglevel=info
    deploy:
      resources:
        limits:
          cpus: '0.4'
          memory: 768M
    volumes:
      - ./videos:/app/videos
      - ./output:/app/output
      - ./temp:/app/temp
      - ./cache:/app/cache
      - ./logs:/app/logs
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - WHISPER_MODEL=tiny
    depends_on:
      redis:
        condition: service_healthy

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 256M
    depends_on:
      - server
      - worker

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  redis_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
