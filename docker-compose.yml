version: '3.7'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app_network

  server:
    build: .
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - PYTHONUNBUFFERED=1
      - FLASK_APP=src.server
      - FLASK_ENV=development
      - FLASK_DEBUG=1
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    volumes:
      - ./videos:/app/videos
      - ./output:/app/output
      - ./temp:/app/temp
      - ./cache:/app/cache/models
      - ./logs:/app/logs
      - ./client_secrets.json:/app/client_secrets.json:ro
      - ./api.txt:/app/api.txt:ro
    working_dir: /app
    command: python -m flask run --host=0.0.0.0 --port=8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
    depends_on:
      - redis
    networks:
      - app_network

  worker:
    build: .
    command: celery -A src.server.celery worker --loglevel=info
    volumes:
      - ./videos:/app/videos
      - ./output:/app/output
      - ./temp:/app/temp
      - ./cache:/app/cache/models
      - ./logs:/app/logs
      - ./client_secrets.json:/app/client_secrets.json:ro
      - ./api.txt:/app/api.txt:ro
    environment:
      - PYTHONUNBUFFERED=1
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      - redis
    networks:
      - app_network

volumes:
  redis_data:

networks:
  app_network:
    driver: bridge
