from flask import Flask, request, jsonify, render_template_string, send_file
import subprocess
import os
import time
import threading

app = Flask(__name__)

VIDEO_DIR = "/app/videos"
os.makedirs(VIDEO_DIR, exist_ok=True)

# üîπ –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
lock = threading.Lock()

# üîπ HTML-—Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–ª—è –≤–≤–æ–¥–∞ —Å—Å—ã–ª–∫–∏
HTML_PAGE = """
<!DOCTYPE html>
<html>
<head>
    <title>YouTube Video Downloader</title>
</head>
<body>
    <h2>–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ YouTube</h2>
    <form action="/download" method="post">
        <input type="text" name="url" placeholder="https://www.youtube.com/watch?v=..." required>
        <button type="submit">–°–∫–∞—á–∞—Ç—å</button>
    </form>
</body>
</html>
"""

@app.route("/")
def home():
    return render_template_string(HTML_PAGE)

# üîπ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –≤–∏–¥–µ–æ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ–º –Ω–∞ 1 –ø—Ä–æ—Ü–µ—Å—Å
@app.route("/download", methods=["POST"])
def download_video():
    global lock
    video_url = request.form.get("url") or request.json.get("url")
    if not video_url:
        return jsonify({"error": "URL –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω"}), 400

    filename = os.path.join(VIDEO_DIR, "video.mp4")

    with lock:  # –ë–ª–æ–∫–∏—Ä—É–µ–º –ø—Ä–æ—Ü–µ—Å—Å, –ø–æ–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ –Ω–µ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è
        command = f"yt-dlp -f best -o {filename} {video_url}"
        result = subprocess.run(command, shell=True, capture_output=True, text=True)

        if result.returncode != 0:
            return jsonify({"error": f"–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è: {result.stderr}"}), 500

    if not os.path.exists(filename):
        return jsonify({"error": "–û—à–∏–±–∫–∞ —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ: —Ñ–∞–π–ª –Ω–µ —Å–æ–∑–¥–∞–Ω"}), 500

    return jsonify({"message": "–í–∏–¥–µ–æ —Å–∫–∞—á–∞–Ω–æ", "file": filename})

# üîπ API –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤–∏–¥–µ–æ –Ω–∞ –ª–æ–∫–∞–ª—å–Ω—ã–π –ü–ö
@app.route("/get_video", methods=["GET"])
def get_video():
    filename = os.path.join(VIDEO_DIR, "video.mp4")
    if not os.path.exists(filename):
        return jsonify({"error": "–í–∏–¥–µ–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"}), 404
    return send_file(filename, as_attachment=True)

# üîπ –§–æ–Ω–æ–≤–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö –≤–∏–¥–µ–æ (–∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç —É–¥–∞–ª—è–µ—Ç —Ñ–∞–π–ª—ã —Å—Ç–∞—Ä—à–µ 1 —á–∞—Å–∞)
def cleanup_videos():
    while True:
        for file in os.listdir(VIDEO_DIR):
            file_path = os.path.join(VIDEO_DIR, file)
            if os.path.isfile(file_path) and time.time() - os.path.getmtime(file_path) > 3600:
                os.remove(file_path)
        time.sleep(600)  # –ü—Ä–æ–≤–µ—Ä—è—Ç—å –∫–∞–∂–¥—ã–µ 10 –º–∏–Ω—É—Ç

# –ó–∞–ø—É—Å–∫–∞–µ–º –æ—á–∏—Å—Ç–∫—É –≤ —Ñ–æ–Ω–æ–≤–æ–º –ø–æ—Ç–æ–∫–µ
threading.Thread(target=cleanup_videos, daemon=True).start()

if __name__ == "__main__":
    app.run(host="0.0.0.0", port=8080)
